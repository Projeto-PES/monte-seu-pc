DROP DATABASE IF EXISTS MONTE_SEU_PC;
CREATE DATABASE IF NOT EXISTS MONTE_SEU_PC;

USE MONTE_SEU_PC;

CREATE TABLE IF NOT EXISTS USUARIO (
    id INT PRIMARY KEY AUTO_INCREMENT,
    -- campos sign up
    email VARCHAR(255) NOT NULL UNIQUE,
    nome VARCHAR(255) NOT NULL,
    senha BINARY(32) NOT NULL,
    --
    ehAdmin BOOL DEFAULT 0,
    token BINARY(8) UNIQUE,
    sessao TIMESTAMP
);

CREATE TABLE IF NOT EXISTS COMPUTADORES (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nome VARCHAR(255) NOT NULL,
    dono INT,
    FOREIGN KEY (dono) REFERENCES USUARIO(id)
);

CREATE TABLE IF NOT EXISTS PECAS (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nome VARCHAR(255) NOT NULL,
    marca VARCHAR(255) NOT NULL,
    -- Encher este enum depois
    tipo ENUM('Placa-mãe', 'Processador', 'Memória', 'Fonte') NOT NULL,
    pot INT DEFAULT 0,
    CONSTRAINT nomeComp UNIQUE(nome,marca)
);

CREATE TABLE IF NOT EXISTS PROPRIEDADE (
    nome VARCHAR(255) PRIMARY KEY,
    descricao TEXT UNIQUE
);

CREATE TABLE IF NOT EXISTS INCOMPAT_PROP (
    prop1 VARCHAR(255),
    prop2 VARCHAR(255),
    razao VARCHAR(255) DEFAULT '',
    nivel ENUM('Aviso', 'Incompatibilidade') DEFAULT 'Incompatibilidade',
    PRIMARY KEY (prop1, prop2),
    CHECK(prop1<>prop2),
    FOREIGN KEY (prop1) REFERENCES PROPRIEDADE(nome),
    FOREIGN KEY (prop2) REFERENCES PROPRIEDADE(nome)
);

CREATE TABLE IF NOT EXISTS PECAS_PROP (
    peca INT,
    prop VARCHAR(255),
    PRIMARY KEY (peca, prop),
    FOREIGN KEY (peca) REFERENCES PECAS(id),
    FOREIGN KEY (prop) REFERENCES PROPRIEDADE(nome)
);

CREATE TABLE IF NOT EXISTS COMP_PECAS (
    comp INT,
    peca INT,
    PRIMARY KEY (comp, peca),
    FOREIGN KEY (comp) REFERENCES COMPUTADORES(id),
    FOREIGN KEY (peca) REFERENCES PECAS(id)
);

